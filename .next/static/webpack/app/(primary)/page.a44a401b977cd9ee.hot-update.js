"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(primary)/page",{

/***/ "(app-pages-browser)/./src/utilities/apiUtils.ts":
/*!***********************************!*\
  !*** ./src/utilities/apiUtils.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeTransactions: function() { return /* binding */ analyzeTransactions; },\n/* harmony export */   checkFlaggedAddress: function() { return /* binding */ checkFlaggedAddress; },\n/* harmony export */   checkMultipleAddresses: function() { return /* binding */ checkMultipleAddresses; },\n/* harmony export */   fetchDataAndMetrics: function() { return /* binding */ fetchDataAndMetrics; },\n/* harmony export */   fetchEtherscanData: function() { return /* binding */ fetchEtherscanData; },\n/* harmony export */   fetchTransactionSummary: function() { return /* binding */ fetchTransactionSummary; },\n/* harmony export */   isValidAddress: function() { return /* binding */ isValidAddress; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\n// Utility function to validate Ethereum address\nconst isValidAddress = (address)=>{\n    const ethRegExp = /^(0x)?[0-9a-fA-F]{40}$/;\n    return ethRegExp.test(address);\n};\n// Map risk level to one of the specific string literals\nconst mapRiskLevel = (risk)=>{\n    switch(risk.toLowerCase()){\n        case \"high\":\n            return \"High\";\n        case \"medium\":\n            return \"Medium\";\n        case \"low\":\n            return \"Low\";\n        case \"none\":\n        default:\n            return \"None\";\n    }\n};\n// Fetch transactions and metrics from the backend API\nconst fetchDataAndMetrics = async (address)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/api/endpoints\", {\n            params: {\n                endpoint: \"get_data_and_metrics\",\n                address\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching data and metrics:\", error);\n        return null;\n    }\n};\n// Fetch transaction summary from the backend API\nconst fetchTransactionSummary = async (address)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/api/endpoints\", {\n            endpoint: \"transaction_summary\",\n            address\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching transaction summary:\", error);\n        return null;\n    }\n};\n// Check if the address is flagged\nconst checkFlaggedAddress = async (address)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/api/endpoints\", {\n            params: {\n                endpoint: \"checkaddress\",\n                address\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error checking flagged address:\", error);\n        return null;\n    }\n};\n// Fetch transactions from Etherscan directly\nconst fetchEtherscanData = async (address)=>{\n    const ethApiKey = \"QEX6DGCMDRPXRU89FKPUR4BG9AUMCR4FXD\";\n    const ethUrl = \"https://api.etherscan.io/api?module=account&action=txlist&address=\".concat(address, \"&startblock=0&endblock=99999999&sort=asc&apikey=\").concat(ethApiKey);\n    try {\n        const ethResponse = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(ethUrl);\n        const ethData = ethResponse.data;\n        if (ethData.status === \"1\") {\n            return ethData.result.map((tx, index)=>({\n                    id: tx.hash || index.toString(),\n                    timestamp: new Date(parseInt(tx.timeStamp) * 1000).toISOString(),\n                    type: address.toLowerCase() === tx.from.toLowerCase() ? \"Sent\" : \"Received\",\n                    cryptocurrency: \"ETH\",\n                    usdAmount: parseFloat(tx.value) / 1e18,\n                    thirdPartyWallet: address.toLowerCase() === tx.from.toLowerCase() ? tx.to : tx.from,\n                    flagged: false,\n                    risk: mapRiskLevel(tx.risk || \"None\")\n                }));\n        } else {\n            console.error(\"Error fetching Etherscan data:\", ethData.message);\n            return [];\n        }\n    } catch (error) {\n        console.error(\"Error fetching Etherscan data:\", error);\n        return [];\n    }\n};\n// Check multiple addresses for flagged or suspicious activities\nconst checkMultipleAddresses = async (addresses)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/api/endpoints\", {\n            endpoint: \"check_multiple_addresses\",\n            addresses\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error checking multiple addresses:\", error);\n        return null;\n    }\n};\n// Analyze transactions with the backend API\nconst analyzeTransactions = async (address, transactions)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/api/endpoints\", {\n            endpoint: \"analyze_transactions\",\n            address,\n            transactions\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error analyzing transactions:\", error);\n        return null;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utilities/apiUtils.ts\n"));

/***/ })

});